#!/usr/bin/bash
#

umask 022
unalias -a

pushd() { command pushd "$1" > /dev/null; }
popd() { command popd "$1" > /dev/null; }
msg() { printf "\033[1;34m::\033[0m %s\n" "$@"; }
warn() { printf "\033[1;33m::\033[0m %s\n" "$@"; }
die() {
	printf "\033[1;31m::\033[0m %s\n" "$@"
	for i in proc sys dev; do
		mountpoint -q /mnt/$i && umount -fl /mnt/$i
	done
	exit 1
}

usage() {
	cat <<-EOF
		ataraxia-install - Simple system installer for Ataraxia Linux

		Usage: ataraxia-install [OPTION] [ARGUMENT]

		Options:
		   -b [BOOT DEVICE]	Boot partition (eg. /dev/sda1)
		   -r [ROOT DEVICE]	Root partition (eg. /dev/sda2)
		   -w [SWAP PARTITION]	Swap partition (eg. /dev/sda3)
		   -k [KEYMAP]		Setup keymap to use (default: us)
		   -t [TIMEZONE]	Setup timezone to use (default: America/New_York)
		   -h [HOSTNAME]	Setup hostname to use (default: ataraxia)
		   -s [SERVICES]	Enable specific services on install

		Example:
		   ataraxia-install -r /dev/sda2 -b /dev/sda1 -s "redis"

		BUG TRACKER: https://github.com/ataraxialinux/neko/installer
		
	EOF
	exit 0
}

check_root() {
	if [[ $EUID -ne 0 ]]; then
		die "You must be root to run 'ataraxia-install'"
	fi
}


runlive_cmd() {
	local cmd="$@"

	chroot /mnt /usr/bin/env -i \
		HOME=/home/root \
		TERM="$TERM" \
		PATH=/usr/bin \
		/usr/bin/$cmd
}

configure_password() {
	:
}

main() {
	local keyboardmap="us"
	local timezone="America/New_York"
	local hostname="ataraxia"
	local services="gdm lightdm"
	local efi efibitness rootdevice bootdevice swapdevice confirm mklabel bootfs disk EFITGT

	while getopts r:b:w:k:t:h:s: opts; do
		case $opts in
			r) rootdevice="$(realpath $OPTARG)" ;;
			b) bootdevice="$(realpath $OPTARG)" ;;
			w) swapdevice="$(realpath $OPTARG)" ;;
			k) keyboardmap="$OPTARG" ;;
			t) timezone="$OPTARG" ;;
			h) hostname="$OPTARG" ;;
			s) services="$services $OPTARG" ;;
		esac
	done
	shift $((OPTIND - 1))

	check_root

	[ ! -b "$rootdevice" ] && usage
	[ ! -b "$bootdevice" ] && usage

	disk="$(echo $bootdevice | sed -e 's/[0-9]\+$//')"

	msg "Installing Ataraxia Linux on $rootdevice"
	read -p "Continue [y/N]: " -r confirm
	case $confirm in
		y|Y) true ;;
		n|N|*) exit 0 ;;
	esac

	msg "Searching for install media"
	if ! mountpoint -q /run/live-os; then
		die "Seems the initramfs is not mounted. Mount manually"
	fi

	if [ -d "/sys/firmware/efi" ]; then
		efi="yes"
		efibitness="$(cat /sys/firmware/efi/fw_platform_size)"
		bootfs="fat"
	else
		efi="no"
		bootfs="ext4"
	fi

	msg "Formating partitions"
	case $bootfs in
		fat)
			mkfs.vfat -F32 "$bootdevice" &>/dev/null
			;;
		ext4)
			mke2fs -q -F -t ext4 "$bootdevice" &>/dev/null
			;;
	esac
	mkfs.btrfs -q -f "$rootdevice"
	if [ -b "$swapdevice" ]; then
		mkswap "$swapdevice"
		swapon "$swapdevice"
	fi

	mount "$rootdevice" /mnt
	mkdir -p /mnt/boot
	mount "$bootdevice" /mnt/boot

	msg "Installing operating system"
	unsquashfs -f -d /mnt /run/live-os/seiba/seiba.sfs

	msg "Generating fstab"
	genfstab -U /mnt >> /mnt/etc/fstab

	msg "Creating mountpoints"
	for i in proc sys dev; do mount --bind /${i} /mnt/${i}; done

	msg "Cleaning up"
	rm /mnt/usr/bin/ataraxia-installer
	if [ -f "/mnt/etc/motd.old" ]; then
		mv /mnt/etc/motd.old /mnt/etc/motd
	fi
	neko rm -r /mnt squashfs-tools &>/dev/null

	msg "Creating udev database"
	runlive_cmd udevadm hwdb --update

	msg "Installing bootloader"
	case $(uname -m) in
		x86_64|i?86)
				if [ "$efi" = "yes" ]; then
					case $efibitness in
						64) EFITGT="x86_64-efi" ;;
						32) EFITGT="i386-efi" ;;
					esac
					runlive_cmd grub-install --target=$EFITGT --efi-directory=/boot --bootloader-id=ataraxia
					runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				else
					runlive_cmd grub-install "$disk"
					runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				fi
				;;
		aarch64)
				runlive_cmd grub-install --target=arm64-efi --efi-directory=/boot --bootloader-id=ataraxia
				runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				;;
		armv*)
				runlive_cmd grub-install --target=arm-efi --efi-directory=/boot --bootloader-id=ataraxia
				runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				;;
	esac

	msg "Set root password"
	configure_password "root"

	msg "Configuring services"
	for i in $services; do
		if [ -f "/mnt/usr/lib/systemd/system/$i.service" ]; then
			runlive_cmd systemctl -q enable $i
		fi
	done

	msg "Setting keymap: $keymap"
	echo "KEYMAP=$keymap" >> /mnt/etc/vconsole.conf

	msg "Setting hostname: $hostname"
	echo "$hostname" >> /mnt/etc/hostname

	msg "Setting timezone: $timezone"
	ln -sf /usr/share/zoneinfo/$timezone /mnt/etc/localtime

	msg "Unmounting everything"
	for i in proc sys dev boot; do umount -fl /mnt/${i}; done
	umount -fl /mnt

	if [ -b "$swapdevice" ]; then
		swapoff "$swapdevice"
	fi

	msg "Congratulations!"
	msg "You have installed Ataraxia Linux on your computer. Explore!"
}

main "$@"

exit 0

