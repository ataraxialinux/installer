#!/usr/bin/env bash

print_welcome() {
	local num="$((1 + RANDOM % 10))"
	case $num in
		1|3|5|7|9) echo -ne "\033]0;The oldest anarchy server in Minecraft\007" ;;
		2|4|6|8|10) echo -ne "\033]0;Welcome to hell!\007" ;;
	esac

	cat <<-EOF
		Welcome to Ataraxia Linux/$(uname -m) installation program!

		This program will install Ataraxia Linux on your computer.

		Make sure your disk size is more than 5 gigabytes.
	EOF
	echo -e "\e[5m\e[91mWARNING!\e[39m\e[0m ALL FILES WILL BE DESTROYED!\n"
}

runlive_cmd() {
	local cmd="$@"

	chroot /mnt /usr/bin/env -i \
		HOME=/home/root \
		TERM="$TERM" \
		PATH=/usr/bin \
		/usr/bin/$cmd
}

list_kmaps() {
	local kmaps="$(find /usr/share/keymaps -type f -iname "*.map.gz" -printf "%f " | sed 's|.map.gz||g' | sort | uniq)"
	echo "$kmaps"
}

configure_system() {
	read -p "What keyboard layout will you use? [Type 'l' to list keymaps] " -r ikmap

	case $ikmap in
		l) list_kmaps ;;
		*) kmap="$ikmap" ;;
	esac

	read -p "Figure out system hostname " -r hostname
	read -p "System timezone " -r timezone
}

select_interfaces() {
	local avail="$(find /sys/class/net -type l -printf "%f " | tr '\n' ' ' sort | uniq)"

	echo "Available network interfaces: $avail"
	read -p "Which network interfaces do you want to use (Type 's' to skip) " -r if

	case $if in
		lo) echo "Cannot use following interface: $if"; select_interfaces ;;
		s) ifskip="yes"; return 0 ;;
		*) true ;;
	esac

	if [ ! -d "/sys/class/net/$if" ]; then
		echo "You have selected wrong network interface. Please try again."
		select_interfaces
	fi

	select_interfaces_b
}

select_interfaces_b() {
	echo "Available network types: dhcp, static, wireless"
	read -p "Your type of network " -r ifmode

	case $ifmode in
		dhcp)
			cat > /tmp/net <<-EOF
				[Match]
				Name=$if

				[Network]
				DHCP=ipv4

				[DHCP]
				UseDomains=true
			EOF
			;;
		static)
			read -p "Your static address (eg. '192.168.0.101') " -r iaddress
			read -p "Your gateway (eg. '192.168.0.1') " -r igateway
			cat > /tmp/net <<-EOF
				[Match]
				Name=$if

				[Network]
				Address=$iaddress/24
				Gateway=$igateway
				DNS=$igateway
			EOF
			;;
		wireless)
			read -p "Your Wi-Fi network name " -r iessid
			read -p "Your Wi-Fi password " -s -r ipsk
			cat > /tmp/net <<-EOF
				[Match]
				Name=$if

				[Network]
				DHCP=yes
			EOF
			cat > /tmp/wpa <<-EOF
				network={
					ssid="$iessid"
					psk="$ipsk"
				}
			EOF
			;;
		*)
			echo "Unknown network type, try again"
			select_interfaces_b
	esac
}

configure_root() {
	echo "Configure root password"
	runlive_cmd passwd root || configure_root
}

configure_users_b() {
	local user="$1"
	runlive_cmd passwd $user || configure_users_b $user
}

configure_users() {
	local iskip

	read -p "Add new user, figure out the name (eg, 'foo') " -r user
	if [ -z "$user" ]; then
		read -p "Do you want to skip users creation? (yes/no) " -r iskip
		case $iskip in
			yes|y) return 0 ;;
			no|n|*) configure_users ;;
		esac
	fi

	runlive_cmd useradd -m -G users,wheel,audio,video,input $user
	configure_users_b $user
}

select_disk() {
	local avail="$(lsblk -lo NAME,TYPE | grep 'disk' | awk '{print $1}' | tr '\n' ' ' | sort | uniq)"

	echo "Available disks: $avail"
	read -p "Which disk do you want to use? " -r disk
	if [ -z "$disk" ]; then
		echo "Please select disk to use for installation"
		select_disk
	fi
	if [ ! -f "/dev/$disk" ]; then
		echo "You have selected wrong disk. Please try again."
		select_disk
	fi
	export disk
}

install_os() {
	local confirm efi efibitness EFITGT

	read -p "Everything needed is ready. Type 'yes' to install Ataraxia Linux (yes/no) " -r confirm
	case $confirm in
		yes|y) true ;;
		no|n|*) exit 0 ;;
	esac

	if [ -d "/sys/firmware/efi" ]; then
		efi="yes"
		efibitness="$(cat /sys/firmware/efi/fw_platform_size)"
	else
		efi="no"
	fi

	echo "Searching for install media"
	if ! mountpoint -q /media/cdrom; then
		echo "Seems the initramfs hasn't mounted the install partition. Mount manually"
		exit 1
	fi

	echo "Creating partitions"
	if [ "$efi" == "yes" ]; then
		mklabel="gpt"
		bootfs="fat"
	else
		mklabel="msdos"
		bootfs="ext4"
	fi

	parted -s /dev/$disk mklabel $mklabel
	parted -a optimal -s /dev/$disk mkpart primary 2mb 256mb
	parted -a optimal -s /dev/$disk mkpart primary 256mb 100%
	[ "$mklabel" == "msdos" ] && parted -s /dev/$disk set 1 boot on
	[ "$mklabel" == "gpt" ] &&   parted -s /dev/$disk set 1 esp on

	echo "Formating partitions"
	case $bootfs in
		fat)
			mkfs.vfat -F32 "/dev/${disk}1"
			;;
		ext4)
			mke2fs -F -t ext4 "/dev/${disk}1"
			;;
	esac
	mkfs.btrfs -f "/dev/${disk}2"

	mount "/dev/${disk}2" /mnt
	mkdir -p /mnt/boot
	mount "/dev/${disk}1" /mnt/boot

	echo "Installing operating system"
	unsquashfs -f -d /mnt /media/cdrom/seiba/seiba.sfs

	echo "Generating fstab"
	genfstab -U /mnt >> /mnt/etc/fstab

	echo "Creating mountpoints"
	for i in proc sys dev; do mount --bind /${i} /mnt/${i}; done

	echo "Cleaning up"
	rm /mnt/usr/bin/ataraxia-installer
	if [ -f "/mnt/etc/motd.old" ]; then
		mv /mnt/etc/motd.old /mnt/etc/motd
	fi
	neko rm -r /mnt squashfs-tools

	echo "Creating udev database"
	runlive_cmd udevadm hwdb --update

	echo "Installing bootloader"
	case $(uname -m) in
		x86_64|i?86)
				if [ "$efi" = "yes" ]; then
					case $efibitness in
						64) EFITGT="x86_64-efi" ;;
						32) EFITGT="i386-efi" ;;
					esac
					runlive_cmd grub-install --target=$EFITGT --efi-directory=/boot --bootloader-id=ataraxia
					runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				else
					runlive_cmd grub-install /dev/$disk
					runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				fi
				;;
		aarch64)
				runlive_cmd grub-install --target=arm64-efi --efi-directory=/boot --bootloader-id=ataraxia
				runlive_cmd grub-mkconfig -o /boot/grub/grub.cfg
				;;
	esac

	configure_root
	configure_users

	echo "Configuring services"
	for i in NetworkManager lightdm gdm earlyoom; do
		if [ -f "/mnt/usr/lib/systemd/system/$i.service" ]; then
			runlive_cmd systemctl enable $i
		fi
	done

	echo "Configurting hostname"
	echo "$hostname" >> /mnt/etc/hostname

	echo "Configuring timezone"
	ln -sf /usr/share/zoneinfo/$timezone /mnt/etc/localtime

	echo "Copying network configuration"
	mv /tmp/net /mnt/etc/systemd/network/10-default.network
	[ -f "/tmp/wpa" ] && mv /tmp/wpa /mnt/etc/wpa_supplicant/wpa_supplicant.conf

	echo "Unmounting everything"
	for i in proc sys dev boot; do umount -l /mnt/${i}; done
	umount -l /mnt
	umount -l /media/cdrom

	echo "Congratulations!"
	echo "You have installed Ataraxia Linux on your computer. Explore!"
}

main() {
	rm -rf /tmp/net /tmp/liveun

	export kmap="us"
	export hostname="localhost"
	export timezone="America/New_York"
	export if="eth0"
	export ifmode="dhcp"
	export ifskip="no"

	print_welcome
	configure_system
	select_interfaces
	select_disk
	install_os
}

main

exit 0

